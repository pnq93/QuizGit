#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quiz
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bazaQuiz")]
	public partial class bazaQuizDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGra(Gra instance);
    partial void UpdateGra(Gra instance);
    partial void DeleteGra(Gra instance);
    partial void InsertZadane_Pytania(Zadane_Pytania instance);
    partial void UpdateZadane_Pytania(Zadane_Pytania instance);
    partial void DeleteZadane_Pytania(Zadane_Pytania instance);
    partial void InsertKategoria(Kategoria instance);
    partial void UpdateKategoria(Kategoria instance);
    partial void DeleteKategoria(Kategoria instance);
    partial void InsertOdpowiedzi(Odpowiedzi instance);
    partial void UpdateOdpowiedzi(Odpowiedzi instance);
    partial void DeleteOdpowiedzi(Odpowiedzi instance);
    partial void InsertPytania(Pytania instance);
    partial void UpdatePytania(Pytania instance);
    partial void DeletePytania(Pytania instance);
    partial void InsertTyp_pytania(Typ_pytania instance);
    partial void UpdateTyp_pytania(Typ_pytania instance);
    partial void DeleteTyp_pytania(Typ_pytania instance);
    partial void InsertUdzielona_odpowiedz(Udzielona_odpowiedz instance);
    partial void UpdateUdzielona_odpowiedz(Udzielona_odpowiedz instance);
    partial void DeleteUdzielona_odpowiedz(Udzielona_odpowiedz instance);
    partial void InsertUzytkownicy(Uzytkownicy instance);
    partial void UpdateUzytkownicy(Uzytkownicy instance);
    partial void DeleteUzytkownicy(Uzytkownicy instance);
    #endregion
		
		public bazaQuizDataContext() : 
				base(global::Quiz.Properties.Settings.Default.bazaQuizConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public bazaQuizDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaQuizDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaQuizDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaQuizDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Gra> Gras
		{
			get
			{
				return this.GetTable<Gra>();
			}
		}
		
		public System.Data.Linq.Table<Zadane_Pytania> Zadane_Pytanias
		{
			get
			{
				return this.GetTable<Zadane_Pytania>();
			}
		}
		
		public System.Data.Linq.Table<Kategoria> Kategorias
		{
			get
			{
				return this.GetTable<Kategoria>();
			}
		}
		
		public System.Data.Linq.Table<Odpowiedzi> Odpowiedzis
		{
			get
			{
				return this.GetTable<Odpowiedzi>();
			}
		}
		
		public System.Data.Linq.Table<Pytania> Pytanias
		{
			get
			{
				return this.GetTable<Pytania>();
			}
		}
		
		public System.Data.Linq.Table<Typ_pytania> Typ_pytanias
		{
			get
			{
				return this.GetTable<Typ_pytania>();
			}
		}
		
		public System.Data.Linq.Table<Udzielona_odpowiedz> Udzielona_odpowiedzs
		{
			get
			{
				return this.GetTable<Udzielona_odpowiedz>();
			}
		}
		
		public System.Data.Linq.Table<Uzytkownicy> Uzytkownicies
		{
			get
			{
				return this.GetTable<Uzytkownicy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gra")]
	public partial class Gra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _data_rozgrywki;
		
		private int _id_uzytkownika;
		
		private EntitySet<Zadane_Pytania> _Zadane_Pytanias;
		
		private EntityRef<Uzytkownicy> _Uzytkownicy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Ondata_rozgrywkiChanging(System.DateTime value);
    partial void Ondata_rozgrywkiChanged();
    partial void Onid_uzytkownikaChanging(int value);
    partial void Onid_uzytkownikaChanged();
    #endregion
		
		public Gra()
		{
			this._Zadane_Pytanias = new EntitySet<Zadane_Pytania>(new Action<Zadane_Pytania>(this.attach_Zadane_Pytanias), new Action<Zadane_Pytania>(this.detach_Zadane_Pytanias));
			this._Uzytkownicy = default(EntityRef<Uzytkownicy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_rozgrywki", DbType="Date NOT NULL")]
		public System.DateTime data_rozgrywki
		{
			get
			{
				return this._data_rozgrywki;
			}
			set
			{
				if ((this._data_rozgrywki != value))
				{
					this.Ondata_rozgrywkiChanging(value);
					this.SendPropertyChanging();
					this._data_rozgrywki = value;
					this.SendPropertyChanged("data_rozgrywki");
					this.Ondata_rozgrywkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_uzytkownika", DbType="Int NOT NULL")]
		public int id_uzytkownika
		{
			get
			{
				return this._id_uzytkownika;
			}
			set
			{
				if ((this._id_uzytkownika != value))
				{
					if (this._Uzytkownicy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_uzytkownikaChanging(value);
					this.SendPropertyChanging();
					this._id_uzytkownika = value;
					this.SendPropertyChanged("id_uzytkownika");
					this.Onid_uzytkownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gra_Zadane_Pytania", Storage="_Zadane_Pytanias", ThisKey="Id", OtherKey="id_gra")]
		public EntitySet<Zadane_Pytania> Zadane_Pytanias
		{
			get
			{
				return this._Zadane_Pytanias;
			}
			set
			{
				this._Zadane_Pytanias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownicy_Gra", Storage="_Uzytkownicy", ThisKey="id_uzytkownika", OtherKey="Id", IsForeignKey=true)]
		public Uzytkownicy Uzytkownicy
		{
			get
			{
				return this._Uzytkownicy.Entity;
			}
			set
			{
				Uzytkownicy previousValue = this._Uzytkownicy.Entity;
				if (((previousValue != value) 
							|| (this._Uzytkownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uzytkownicy.Entity = null;
						previousValue.Gras.Remove(this);
					}
					this._Uzytkownicy.Entity = value;
					if ((value != null))
					{
						value.Gras.Add(this);
						this._id_uzytkownika = value.Id;
					}
					else
					{
						this._id_uzytkownika = default(int);
					}
					this.SendPropertyChanged("Uzytkownicy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zadane_Pytanias(Zadane_Pytania entity)
		{
			this.SendPropertyChanging();
			entity.Gra = this;
		}
		
		private void detach_Zadane_Pytanias(Zadane_Pytania entity)
		{
			this.SendPropertyChanging();
			entity.Gra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zadane_Pytania")]
	public partial class Zadane_Pytania : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _id_gra;
		
		private int _id_pytania;
		
		private EntitySet<Udzielona_odpowiedz> _Udzielona_odpowiedzs;
		
		private EntityRef<Gra> _Gra;
		
		private EntityRef<Pytania> _Pytania;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onid_graChanging(int value);
    partial void Onid_graChanged();
    partial void Onid_pytaniaChanging(int value);
    partial void Onid_pytaniaChanged();
    #endregion
		
		public Zadane_Pytania()
		{
			this._Udzielona_odpowiedzs = new EntitySet<Udzielona_odpowiedz>(new Action<Udzielona_odpowiedz>(this.attach_Udzielona_odpowiedzs), new Action<Udzielona_odpowiedz>(this.detach_Udzielona_odpowiedzs));
			this._Gra = default(EntityRef<Gra>);
			this._Pytania = default(EntityRef<Pytania>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gra", DbType="Int NOT NULL")]
		public int id_gra
		{
			get
			{
				return this._id_gra;
			}
			set
			{
				if ((this._id_gra != value))
				{
					if (this._Gra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_graChanging(value);
					this.SendPropertyChanging();
					this._id_gra = value;
					this.SendPropertyChanged("id_gra");
					this.Onid_graChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pytania", DbType="Int NOT NULL")]
		public int id_pytania
		{
			get
			{
				return this._id_pytania;
			}
			set
			{
				if ((this._id_pytania != value))
				{
					if (this._Pytania.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pytaniaChanging(value);
					this.SendPropertyChanging();
					this._id_pytania = value;
					this.SendPropertyChanged("id_pytania");
					this.Onid_pytaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zadane_Pytania_Udzielona_odpowiedz", Storage="_Udzielona_odpowiedzs", ThisKey="Id", OtherKey="id_zadane_pytanie")]
		public EntitySet<Udzielona_odpowiedz> Udzielona_odpowiedzs
		{
			get
			{
				return this._Udzielona_odpowiedzs;
			}
			set
			{
				this._Udzielona_odpowiedzs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gra_Zadane_Pytania", Storage="_Gra", ThisKey="id_gra", OtherKey="Id", IsForeignKey=true)]
		public Gra Gra
		{
			get
			{
				return this._Gra.Entity;
			}
			set
			{
				Gra previousValue = this._Gra.Entity;
				if (((previousValue != value) 
							|| (this._Gra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gra.Entity = null;
						previousValue.Zadane_Pytanias.Remove(this);
					}
					this._Gra.Entity = value;
					if ((value != null))
					{
						value.Zadane_Pytanias.Add(this);
						this._id_gra = value.Id;
					}
					else
					{
						this._id_gra = default(int);
					}
					this.SendPropertyChanged("Gra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pytania_Zadane_Pytania", Storage="_Pytania", ThisKey="id_pytania", OtherKey="Id", IsForeignKey=true)]
		public Pytania Pytania
		{
			get
			{
				return this._Pytania.Entity;
			}
			set
			{
				Pytania previousValue = this._Pytania.Entity;
				if (((previousValue != value) 
							|| (this._Pytania.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pytania.Entity = null;
						previousValue.Zadane_Pytanias.Remove(this);
					}
					this._Pytania.Entity = value;
					if ((value != null))
					{
						value.Zadane_Pytanias.Add(this);
						this._id_pytania = value.Id;
					}
					else
					{
						this._id_pytania = default(int);
					}
					this.SendPropertyChanged("Pytania");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Udzielona_odpowiedzs(Udzielona_odpowiedz entity)
		{
			this.SendPropertyChanging();
			entity.Zadane_Pytania = this;
		}
		
		private void detach_Udzielona_odpowiedzs(Udzielona_odpowiedz entity)
		{
			this.SendPropertyChanging();
			entity.Zadane_Pytania = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategoria")]
	public partial class Kategoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nazwa;
		
		private EntitySet<Pytania> _Pytanias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    #endregion
		
		public Kategoria()
		{
			this._Pytanias = new EntitySet<Pytania>(new Action<Pytania>(this.attach_Pytanias), new Action<Pytania>(this.detach_Pytanias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_Pytania", Storage="_Pytanias", ThisKey="Id", OtherKey="id_kategoria")]
		public EntitySet<Pytania> Pytanias
		{
			get
			{
				return this._Pytanias;
			}
			set
			{
				this._Pytanias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pytanias(Pytania entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria = this;
		}
		
		private void detach_Pytanias(Pytania entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Odpowiedzi")]
	public partial class Odpowiedzi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _id_pytania;
		
		private string _odp;
		
		private System.Nullable<int> _czy_poprawna;
		
		private EntitySet<Udzielona_odpowiedz> _Udzielona_odpowiedzs;
		
		private EntityRef<Pytania> _Pytania;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onid_pytaniaChanging(System.Nullable<int> value);
    partial void Onid_pytaniaChanged();
    partial void OnodpChanging(string value);
    partial void OnodpChanged();
    partial void Onczy_poprawnaChanging(System.Nullable<int> value);
    partial void Onczy_poprawnaChanged();
    #endregion
		
		public Odpowiedzi()
		{
			this._Udzielona_odpowiedzs = new EntitySet<Udzielona_odpowiedz>(new Action<Udzielona_odpowiedz>(this.attach_Udzielona_odpowiedzs), new Action<Udzielona_odpowiedz>(this.detach_Udzielona_odpowiedzs));
			this._Pytania = default(EntityRef<Pytania>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pytania", DbType="Int")]
		public System.Nullable<int> id_pytania
		{
			get
			{
				return this._id_pytania;
			}
			set
			{
				if ((this._id_pytania != value))
				{
					if (this._Pytania.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pytaniaChanging(value);
					this.SendPropertyChanging();
					this._id_pytania = value;
					this.SendPropertyChanged("id_pytania");
					this.Onid_pytaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_odp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string odp
		{
			get
			{
				return this._odp;
			}
			set
			{
				if ((this._odp != value))
				{
					this.OnodpChanging(value);
					this.SendPropertyChanging();
					this._odp = value;
					this.SendPropertyChanged("odp");
					this.OnodpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czy_poprawna", DbType="Int")]
		public System.Nullable<int> czy_poprawna
		{
			get
			{
				return this._czy_poprawna;
			}
			set
			{
				if ((this._czy_poprawna != value))
				{
					this.Onczy_poprawnaChanging(value);
					this.SendPropertyChanging();
					this._czy_poprawna = value;
					this.SendPropertyChanged("czy_poprawna");
					this.Onczy_poprawnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Odpowiedzi_Udzielona_odpowiedz", Storage="_Udzielona_odpowiedzs", ThisKey="Id", OtherKey="id_odpowiedzi")]
		public EntitySet<Udzielona_odpowiedz> Udzielona_odpowiedzs
		{
			get
			{
				return this._Udzielona_odpowiedzs;
			}
			set
			{
				this._Udzielona_odpowiedzs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pytania_Odpowiedzi", Storage="_Pytania", ThisKey="id_pytania", OtherKey="Id", IsForeignKey=true)]
		public Pytania Pytania
		{
			get
			{
				return this._Pytania.Entity;
			}
			set
			{
				Pytania previousValue = this._Pytania.Entity;
				if (((previousValue != value) 
							|| (this._Pytania.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pytania.Entity = null;
						previousValue.Odpowiedzis.Remove(this);
					}
					this._Pytania.Entity = value;
					if ((value != null))
					{
						value.Odpowiedzis.Add(this);
						this._id_pytania = value.Id;
					}
					else
					{
						this._id_pytania = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pytania");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Udzielona_odpowiedzs(Udzielona_odpowiedz entity)
		{
			this.SendPropertyChanging();
			entity.Odpowiedzi = this;
		}
		
		private void detach_Udzielona_odpowiedzs(Udzielona_odpowiedz entity)
		{
			this.SendPropertyChanging();
			entity.Odpowiedzi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pytania")]
	public partial class Pytania : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _id_typ;
		
		private string _tresc;
		
		private System.Nullable<int> _id_kategoria;
		
		private EntitySet<Zadane_Pytania> _Zadane_Pytanias;
		
		private EntitySet<Odpowiedzi> _Odpowiedzis;
		
		private EntityRef<Kategoria> _Kategoria;
		
		private EntityRef<Typ_pytania> _Typ_pytania;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onid_typChanging(System.Nullable<int> value);
    partial void Onid_typChanged();
    partial void OntrescChanging(string value);
    partial void OntrescChanged();
    partial void Onid_kategoriaChanging(System.Nullable<int> value);
    partial void Onid_kategoriaChanged();
    #endregion
		
		public Pytania()
		{
			this._Zadane_Pytanias = new EntitySet<Zadane_Pytania>(new Action<Zadane_Pytania>(this.attach_Zadane_Pytanias), new Action<Zadane_Pytania>(this.detach_Zadane_Pytanias));
			this._Odpowiedzis = new EntitySet<Odpowiedzi>(new Action<Odpowiedzi>(this.attach_Odpowiedzis), new Action<Odpowiedzi>(this.detach_Odpowiedzis));
			this._Kategoria = default(EntityRef<Kategoria>);
			this._Typ_pytania = default(EntityRef<Typ_pytania>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_typ", DbType="Int")]
		public System.Nullable<int> id_typ
		{
			get
			{
				return this._id_typ;
			}
			set
			{
				if ((this._id_typ != value))
				{
					if (this._Typ_pytania.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_typChanging(value);
					this.SendPropertyChanging();
					this._id_typ = value;
					this.SendPropertyChanged("id_typ");
					this.Onid_typChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tresc", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string tresc
		{
			get
			{
				return this._tresc;
			}
			set
			{
				if ((this._tresc != value))
				{
					this.OntrescChanging(value);
					this.SendPropertyChanging();
					this._tresc = value;
					this.SendPropertyChanged("tresc");
					this.OntrescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kategoria", DbType="Int")]
		public System.Nullable<int> id_kategoria
		{
			get
			{
				return this._id_kategoria;
			}
			set
			{
				if ((this._id_kategoria != value))
				{
					if (this._Kategoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_kategoriaChanging(value);
					this.SendPropertyChanging();
					this._id_kategoria = value;
					this.SendPropertyChanged("id_kategoria");
					this.Onid_kategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pytania_Zadane_Pytania", Storage="_Zadane_Pytanias", ThisKey="Id", OtherKey="id_pytania")]
		public EntitySet<Zadane_Pytania> Zadane_Pytanias
		{
			get
			{
				return this._Zadane_Pytanias;
			}
			set
			{
				this._Zadane_Pytanias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pytania_Odpowiedzi", Storage="_Odpowiedzis", ThisKey="Id", OtherKey="id_pytania")]
		public EntitySet<Odpowiedzi> Odpowiedzis
		{
			get
			{
				return this._Odpowiedzis;
			}
			set
			{
				this._Odpowiedzis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_Pytania", Storage="_Kategoria", ThisKey="id_kategoria", OtherKey="Id", IsForeignKey=true)]
		public Kategoria Kategoria
		{
			get
			{
				return this._Kategoria.Entity;
			}
			set
			{
				Kategoria previousValue = this._Kategoria.Entity;
				if (((previousValue != value) 
							|| (this._Kategoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategoria.Entity = null;
						previousValue.Pytanias.Remove(this);
					}
					this._Kategoria.Entity = value;
					if ((value != null))
					{
						value.Pytanias.Add(this);
						this._id_kategoria = value.Id;
					}
					else
					{
						this._id_kategoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_pytania_Pytania", Storage="_Typ_pytania", ThisKey="id_typ", OtherKey="Id", IsForeignKey=true)]
		public Typ_pytania Typ_pytania
		{
			get
			{
				return this._Typ_pytania.Entity;
			}
			set
			{
				Typ_pytania previousValue = this._Typ_pytania.Entity;
				if (((previousValue != value) 
							|| (this._Typ_pytania.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Typ_pytania.Entity = null;
						previousValue.Pytanias.Remove(this);
					}
					this._Typ_pytania.Entity = value;
					if ((value != null))
					{
						value.Pytanias.Add(this);
						this._id_typ = value.Id;
					}
					else
					{
						this._id_typ = default(Nullable<int>);
					}
					this.SendPropertyChanged("Typ_pytania");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zadane_Pytanias(Zadane_Pytania entity)
		{
			this.SendPropertyChanging();
			entity.Pytania = this;
		}
		
		private void detach_Zadane_Pytanias(Zadane_Pytania entity)
		{
			this.SendPropertyChanging();
			entity.Pytania = null;
		}
		
		private void attach_Odpowiedzis(Odpowiedzi entity)
		{
			this.SendPropertyChanging();
			entity.Pytania = this;
		}
		
		private void detach_Odpowiedzis(Odpowiedzi entity)
		{
			this.SendPropertyChanging();
			entity.Pytania = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Typ_pytania")]
	public partial class Typ_pytania : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _poziom;
		
		private EntitySet<Pytania> _Pytanias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnpoziomChanging(int value);
    partial void OnpoziomChanged();
    #endregion
		
		public Typ_pytania()
		{
			this._Pytanias = new EntitySet<Pytania>(new Action<Pytania>(this.attach_Pytanias), new Action<Pytania>(this.detach_Pytanias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_poziom", DbType="Int NOT NULL")]
		public int poziom
		{
			get
			{
				return this._poziom;
			}
			set
			{
				if ((this._poziom != value))
				{
					this.OnpoziomChanging(value);
					this.SendPropertyChanging();
					this._poziom = value;
					this.SendPropertyChanged("poziom");
					this.OnpoziomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_pytania_Pytania", Storage="_Pytanias", ThisKey="Id", OtherKey="id_typ")]
		public EntitySet<Pytania> Pytanias
		{
			get
			{
				return this._Pytanias;
			}
			set
			{
				this._Pytanias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pytanias(Pytania entity)
		{
			this.SendPropertyChanging();
			entity.Typ_pytania = this;
		}
		
		private void detach_Pytanias(Pytania entity)
		{
			this.SendPropertyChanging();
			entity.Typ_pytania = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Udzielona_odpowiedz")]
	public partial class Udzielona_odpowiedz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _id_odpowiedzi;
		
		private int _id_zadane_pytanie;
		
		private EntityRef<Odpowiedzi> _Odpowiedzi;
		
		private EntityRef<Zadane_Pytania> _Zadane_Pytania;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onid_odpowiedziChanging(int value);
    partial void Onid_odpowiedziChanged();
    partial void Onid_zadane_pytanieChanging(int value);
    partial void Onid_zadane_pytanieChanged();
    #endregion
		
		public Udzielona_odpowiedz()
		{
			this._Odpowiedzi = default(EntityRef<Odpowiedzi>);
			this._Zadane_Pytania = default(EntityRef<Zadane_Pytania>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_odpowiedzi", DbType="Int NOT NULL")]
		public int id_odpowiedzi
		{
			get
			{
				return this._id_odpowiedzi;
			}
			set
			{
				if ((this._id_odpowiedzi != value))
				{
					if (this._Odpowiedzi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_odpowiedziChanging(value);
					this.SendPropertyChanging();
					this._id_odpowiedzi = value;
					this.SendPropertyChanged("id_odpowiedzi");
					this.Onid_odpowiedziChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zadane_pytanie", DbType="Int NOT NULL")]
		public int id_zadane_pytanie
		{
			get
			{
				return this._id_zadane_pytanie;
			}
			set
			{
				if ((this._id_zadane_pytanie != value))
				{
					if (this._Zadane_Pytania.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zadane_pytanieChanging(value);
					this.SendPropertyChanging();
					this._id_zadane_pytanie = value;
					this.SendPropertyChanged("id_zadane_pytanie");
					this.Onid_zadane_pytanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Odpowiedzi_Udzielona_odpowiedz", Storage="_Odpowiedzi", ThisKey="id_odpowiedzi", OtherKey="Id", IsForeignKey=true)]
		public Odpowiedzi Odpowiedzi
		{
			get
			{
				return this._Odpowiedzi.Entity;
			}
			set
			{
				Odpowiedzi previousValue = this._Odpowiedzi.Entity;
				if (((previousValue != value) 
							|| (this._Odpowiedzi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Odpowiedzi.Entity = null;
						previousValue.Udzielona_odpowiedzs.Remove(this);
					}
					this._Odpowiedzi.Entity = value;
					if ((value != null))
					{
						value.Udzielona_odpowiedzs.Add(this);
						this._id_odpowiedzi = value.Id;
					}
					else
					{
						this._id_odpowiedzi = default(int);
					}
					this.SendPropertyChanged("Odpowiedzi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zadane_Pytania_Udzielona_odpowiedz", Storage="_Zadane_Pytania", ThisKey="id_zadane_pytanie", OtherKey="Id", IsForeignKey=true)]
		public Zadane_Pytania Zadane_Pytania
		{
			get
			{
				return this._Zadane_Pytania.Entity;
			}
			set
			{
				Zadane_Pytania previousValue = this._Zadane_Pytania.Entity;
				if (((previousValue != value) 
							|| (this._Zadane_Pytania.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zadane_Pytania.Entity = null;
						previousValue.Udzielona_odpowiedzs.Remove(this);
					}
					this._Zadane_Pytania.Entity = value;
					if ((value != null))
					{
						value.Udzielona_odpowiedzs.Add(this);
						this._id_zadane_pytanie = value.Id;
					}
					else
					{
						this._id_zadane_pytanie = default(int);
					}
					this.SendPropertyChanged("Zadane_Pytania");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uzytkownicy")]
	public partial class Uzytkownicy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _user_name;
		
		private string _password;
		
		private System.Nullable<int> _czy_admin;
		
		private EntitySet<Gra> _Gras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onczy_adminChanging(System.Nullable<int> value);
    partial void Onczy_adminChanged();
    #endregion
		
		public Uzytkownicy()
		{
			this._Gras = new EntitySet<Gra>(new Action<Gra>(this.attach_Gras), new Action<Gra>(this.detach_Gras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czy_admin", DbType="Int")]
		public System.Nullable<int> czy_admin
		{
			get
			{
				return this._czy_admin;
			}
			set
			{
				if ((this._czy_admin != value))
				{
					this.Onczy_adminChanging(value);
					this.SendPropertyChanging();
					this._czy_admin = value;
					this.SendPropertyChanged("czy_admin");
					this.Onczy_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownicy_Gra", Storage="_Gras", ThisKey="Id", OtherKey="id_uzytkownika")]
		public EntitySet<Gra> Gras
		{
			get
			{
				return this._Gras;
			}
			set
			{
				this._Gras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gras(Gra entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownicy = this;
		}
		
		private void detach_Gras(Gra entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownicy = null;
		}
	}
}
#pragma warning restore 1591
